@using WebUtils.Core.Web
@using WebUtils.Services
@{
    @inject IConsentServiceClient consentFeature; // Inject the consent feature service
    if (consentFeature != null) // Ensure consentFeature is not null
    {
        var contextFacade = new HttpContextAdapter(Context);
        var consentResponse = consentFeature.GetConsent(contextFacade);
        var showBanner = !consentResponse.HasCookie;

        if (showBanner)
        {
            <!--Cookie banner-->
            <div class="cookie-consent">
                <span class="cookie-text">
                    We use cookies to ensure you have the best browsing experience on our website. By using our site, you
                    acknowledge that you have read and understood our
                    <a href="/page/privacy" target="_blank"><u>Privacy Policy</u></a>
                    You can manage cookies <a href="/cookiePrefs" target="_blank"><u>here</u></a>
                </span>
                <form id="cookieConsentForm" action="/cookiePrefs" method="post">
                    @Html.AntiForgeryToken()
                    <button id="btnConsent" class="consent-btn" type="submit">
                        Got it!!
                    </button>
                </form>
            </div>

            <script>


                document.addEventListener('DOMContentLoaded', function () {
                    var affn = document.getElementsByName('aftoken')[0];
                    var rvt = affn.getAttribute('value');
                    var btn = document.getElementById('btnConsent');
                    if (btn) {
                        btn.disabled = false
                        btn.addEventListener('click', function (e) {
                            e.preventDefault();
                            fetch("/cookiePrefs", {
                                method: 'POST',
                                headers: {
                                    'RequestVerificationToken': rvt,
                                    'X-Requested-With': 'XMLHttpRequest'
                                },
                                credentials: 'same-origin'
                            })
                            .then(function (response) {
                                if (response.ok) {
                                    document.querySelector('.cookie-consent').style.display = 'none';
                                }
                            });
                        });
                    }
                });
            </script>
        }
    }
}
